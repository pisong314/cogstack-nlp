name: medcat-v2 - Test

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - 'medcat-v2/**'
      - '.github/workflows/medcat-v2**'
defaults:
  run:
    working-directory: ./medcat-v2
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12' ]
      max-parallel: 4
    steps:
      - uses: actions/checkout@v5
      - name: Install uv for Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "medcat-v2/uv.lock"
      - name: Install the project
        run: |
          uv sync --all-extras --dev
          uv run python -m ensurepip
          uv run python -m pip install --upgrade pip
      - name: Check types
        run: |
          uv run python -m mypy --follow-imports=normal medcat
      - name: Ruff linting
        run: |
          uv run ruff check medcat --preview
      - name: Test
        run: |
          timeout 30m uv run python -m unittest discover
      - name: Model regression
        run: |
          uv run bash tests/backwards_compatibility/run_current.sh
      - name: Backwards compatibility
        run: |
          uv run bash tests/backwards_compatibility/check_backwards_compatibility.sh
      - name: Minimize uv cache
        run: uv cache prune --ci
